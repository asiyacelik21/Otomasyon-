<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSil.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnAra.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>